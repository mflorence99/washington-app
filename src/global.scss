/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import '~@ionic/angular/css/core.css';

/* Basic CSS for apps built with Ionic */
@import '~@ionic/angular/css/normalize.css';
@import '~@ionic/angular/css/structure.css';
@import '~@ionic/angular/css/typography.css';
@import '~@ionic/angular/css/display.css';

/* theme colors */
@import 'colors.scss';

// NOTE: undo what ionic/typography hath wrought

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

:root {
  --app-scale: 0;
  --app-translate-x: 0;
  --app-translate-y: 0;
  // land use color shading
  // @see https://www.gismanual.com/style/ColorConventions.pdf
  // @see map-maker
  --shade-u11: var(--mat-brown-300);
  --shade-u12: var(--mat-brown-500);
  --shade-u17: var(--mat-red-200);
  --shade-u19: var(--mat-yellow-200);
  --shade-u22: var(--mat-orange-200);
  --shade-u26: var(--mat-purple-200);
  --shade-u27: var(--mat-gray-300);
  --shade-u33: var(--mat-blue-200);
  --shade-u58: var(--mat-teal-200);
  --shade-u100: #d9e697;
  --shade-u101: #acd19e;
}

app-details {
  background-color: var(--ion-color-dark);
  color: var(--ion-color-light);
  padding: 0.5rem;

  section {
    display: grid;
    grid-gap: 0.5rem;
    height: 100%;
    width: 100%;

    .footer {
      font-style: italic;
      grid-area: footer;
      text-align: right;
    }

    .header {
      grid-area: header;
    }

    .map {
      background-color: yellow;
      display: block;
      grid-area: map;
      height: 100%;
      width: 100%;
    }

    .table {
      background-color: green;
      grid-area: table;
    }
  }
}

app-details.landscape section {
  grid-template-areas:
    'header header'
    'map table'
    'footer footer';
  grid-template-columns: 0.5fr;
  grid-template-rows: auto 1fr auto;
}

app-details.portrait section,
app-details.square section {
  grid-template-areas:
    'header'
    'map'
    'table'
    'footer';
  grid-template-columns: 1fr;
  grid-template-rows: auto 1fr 1fr auto;
}

article.backdrop {
  background-color: rgba(var(--ion-color-medium-rgb), 0.5);
  display: grid;
  font-size: 4rem;
  height: 100%;
  place-content: center;
  position: absolute;
  visibility: hidden;
  width: 100%;

  &.loading {
    color: rgba(var(--ion-color-light-rgb), 0.66);
    visibility: visible;
  }
}

ion-content.main {
  --background: var(--ion-color-dark);
}

ion-menu ul.legend {
  list-style: none;
  padding-left: 2rem;

  li {
    display: flex;
    margin-bottom: 0.5rem;

    .code {
      height: 1rem;
      width: 1rem;
    }
  }
}

ion-searchbar.searchbar {
  --background: rgba(var(--ion-color-medium-rgb), 0.5);
  --border-radius: 0.5rem;
  --color: var(--ion-color-light);
  --icon-color: var(--ion-color-light);

  height: 2.5rem;
  padding: 0;
  position: absolute;
  right: 1rem;
  top: calc(var(--offset-top) + 1rem);
  width: 15rem;
}

section.content {
  height: calc(100% - var(--offset-top));
  position: absolute;
  top: var(--offset-top);
  transform: scale(var(--app-scale));
  transform-origin: 50% 50%;
  transition: transform 0.5s linear;
  width: 100%;
}

// NOTE: svg-icon.lots selector is used in code
// @see page.ts

img.map,
svg-icon.lots {
  display: block;
  position: absolute;
}

img.map {
  border: 1px solid black;
  box-sizing: content-box;
  cursor: move;
  max-width: none;
  touch-action: none;
}

svg-icon.lots {
  pointer-events: none;

  g polygon {
    fill: none;
    stroke: none;
    stroke-width: calc(3 / var(--app-scale));
  }
}

img.map,
svg-icon.lots svg {
  transform: translate(
    calc(var(--app-translate-x) * 1px),
    calc(var(--app-translate-y) * 1px)
  );
}

img.map.animating,
svg-icon.lots.animating svg {
  transition: transform 0.5s linear;
}
